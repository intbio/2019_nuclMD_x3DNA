# Let's see atom contibutions to SASA


import os
os.environ['MPLBACKEND']="PS"

from VMD import *
from Molecule import *
from atomsel import *
from animate import *

import pandas as pd
import numpy as np
import sys

import statsmodels.api as sm

sys.path.insert(0,os.path.join(os.path.dirname(__file__),'../MYSOFT/X3DNA_analysis_modeling/'))
sys.path.insert(0,os.path.join(os.path.dirname(__file__),'../MYSOFT/ALIGNMENT_TOOLS/'))

# from dna_param import get_dna_H_SASA
from dna_param import get_dna_SASA, X3DNA_find_pair,X3DNA_analyze,CURVES_analyze

from L_plot4seq import plot_prof4seq, plot_manyprof4seq
from Bio.Seq import Seq
from Bio.SeqRecord import SeqRecord
from Bio.Align import MultipleSeqAlignment

import time
from multiprocessing import Process, Manager

sum_df=pd.DataFrame() 

PARALLEL=True

probe=1.4
vdwp='charmm-rmin'

def runSASAcalc(DNA):
	return get_dna_H_SASA(DNA,add_hydrogens=False,probe_size=probe,slicew=0.005,vdw_set_select=vdwp,debug=False,reduce='AMBER')



# terms=[0,1,2] # actually this is not used
cont=['H5\'_SASA_1','H5\'\'_SASA_1','H4\'_SASA_1','H3\'_SASA_1','H2\'_SASA_1','H2\'\'_SASA_1','H1\'_SASA_1']
cont2=['H5\'_SASA_2','H5\'\'_SASA_2','H4\'_SASA_2','H3\'_SASA_2','H2\'_SASA_2','H2\'\'_SASA_2','H1\'_SASA_2']


def get_foot(d,t):
	dft=d[cont[t[0]]]
	dft2=d[cont2[t[0]]]

	for i in t[1:]:
		# print i
		dft=dft+d[cont[i]]
		dft2=dft2+d[cont2[i]]

	return list(dft),list(dft2)


mol=Molecule()

#This is for trajectory with non fixed DNA
# mol.load("/Users/alexeyshaytan/work_HD/histones_work/6md_nucl_expl/6md_1kx5_notails_ge_cons/simul/analysis_data/only_nucl_init.psf")
# mol.load("/Users/alexeyshaytan/work_HD/histones_work/6md_nucl_expl/6md_1kx5_notails_ge_cons/simul/analysis_data/only_nucl_init.pdb")
# mol.load("/Users/alexeyshaytan/work_HD/histones_work/6md_nucl_expl/6md_1kx5_notails_ge_cons/simul/analysis_data/md_nucl.dcd",first=500,step=5,last=800)

#This is our new trajectory with fixed DNA
mol.load("/Users/alexeyshaytan/work_HD/2016_nuclMD_fixed_dna/1KX5/analysis_data/only_nucl_init.psf")
mol.load("/Users/alexeyshaytan/work_HD/2016_nuclMD_fixed_dna/1KX5/analysis_data/only_nucl_init.pdb")
mol.load("/Users/alexeyshaytan/work_HD/2016_nuclMD_fixed_dna/1KX5/analysis_data/md_nucl.dcd",first=300,step=10,last=800)


nf=mol.numFrames()

# DNA=atomsel("nucleic or ((segname CHA CHE and (resid 44 to 135)) or (segname CHB CHF and (resid 24 to 102))  or (segname CHC CHG and (resid 16 to 118)) or (segname CHD CHH and (resid 30 to 122)) )",molid=0)
DNA=atomsel("nucleic ",molid=0)
conv_res={'CYT':'DC','GUA':'DG','THY':'DT','ADE':'DA'}
DNA.set('resname',[conv_res.get(i,i) for i in DNA.get('resname')])
DNA.set('chain',[i[2:] for i in DNA.get('segname')])

reff=X3DNA_find_pair(DNA)

manager = Manager()
return_dict = manager.dict()
jobs = []
def worker(frame,sel, return_dict):
	'''worker function'''
	print "Starting frame ",frame
	# return_dict[frame]=runSASAcalc(sel)
	width=CURVES_analyze(DNA,147)
	width=width[width['Level'].isin(np.append(np.arange(1,147),[1.5,146.5]))]
	width=width.reset_index()
	return_dict[frame]=pd.concat([width,X3DNA_analyze(DNA,reff)],axis=1)


if PARALLEL:
	for i in range(1,nf):
		goto(i)
		p=Process(target=worker, args=(i,DNA,return_dict))
		jobs.append(p)
		p.start()
		time.sleep(2)

	for proc in jobs:
		print "Waiting for ",proc
		proc.join()
else:
	for i in range(1,nf):
		goto(i)
		print "Frame",i
		worker(i,DNA,return_dict)



for i in range(1,nf):
	df=return_dict[i]
	df=df.reset_index()
	ind=pd.DataFrame({'BP':range(-73,74)})
	df2=pd.concat([df,ind],axis=1)
	df2['Time']=i
	sum_df=pd.concat([sum_df,df2])
# exit()
sum_df.to_csv('../out_data/MD_DNAparam_1aoi.csv')

gv=sum_df.groupby(['BP']).agg(np.mean)
gv.to_csv('../out_data/MD_DNAparam_avr_1aoi.csv')

exit()
